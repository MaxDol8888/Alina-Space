from tkinter import *
import random
import time
import os, sys
u = random.randrange(-50, 300)
w = random.randrange(-50, 300)
uu = random.randrange(50, 150)
gg = ['blue', 'red', 'green','black', 'brown']
ccolorr = random.choice(gg) 
class Ball:
    def __init__(self, canvas, color):
        self.canvas = canvas
        self.id = canvas.create_oval(20, 15, uu, uu, fill=color)
        self.canvas.move(self.id, u, w)
    def draw(self):
        self.canvas.move(self.id, 0, -6)
    def draw2(self):
        self.canvas.move(self.id, -12, 0)
    def draw3(self):    
        self.canvas.move(self.id, 0, 5.99)
    def draw4(self):    
        self.canvas.move(self.id, 11.9, 0)
    def hit_paddle(self, pos):
        paddle_pos = self.canvas.coords(self.paddle.id)
        if pos[2] >= paddle_pos[0] and pos[0] <= paddle_pos[2]:
            if pos[3] >= paddle_pos[1] and pos[3] <= paddle_pos[3]:
                return True
        return False        
class Paddle:
    def __init__(self, canvas, color):
        self.canvas = canvas
        self.id = canvas.create_rectangle(0, 0, 100, 10, fill=color)
        self.canvas.move(self.id, 200, 300)
        self.x = 0
        self.canvas_width = self.canvas.winfo_width()
        self.canvas.bind_all('<KeyPress-Left>', self.turn_left)
        self.canvas.bind_all('<KeyPress-Right>', self.turn_right)
def draw(self):
    self.canvas.move(self.id, self.x, 0)
    pos = self.canvas.coords(self.id)
    if pos[0] <= 0:
        self.x = 0
    elif pos[2] >= self.canvas_width:
        self.x = 0
def turn_left(self, evt):
    self.x = -2
def turn_right(self, evt):
    self.x = 2
tk = Tk()
tk.title("Игра")
tk.resizable(0, 0)
tk.wm_attributes("-topmost", 1)
canvas = Canvas(tk, width=500, height=400, bd=0,
highlightthickness=0)
canvas.pack()
tk.update()
paddle = Paddle(canvas, 'blue')
ball = Ball(canvas, paddle, 'red')
while 1:
    if ball.hit_bottom == False:
        ball.draw()
    paddle.draw()
    tk.update_idletasks()
    tk.update()
    time.sleep(0.01)


#22.04.2019

from tkinter import*
import random
import time

def draw_star(color='white'):
    placeX = random.randint(0, 500)
    placeY = random.randint(0, 500)
    canvas.create_polygon((placeX, placeY), (placeX + 10, placeY + 10), (placeX + 5,placeY - 5), (placeX + 0, placeY + 10), (placeX + 10, placeY), fill=color)

class Ball:
    def __init__(self, canvas, color, ball_size, ball_move, interval):
        self.canvas = canvas
        self.color = color
        self.ball_size = ball_size
        self.ball_move = ball_move
        self.ball_move_backward = 0 - ball_move
        self.interval = interval
        self.ball = canvas.create_oval(20, 15, self.ball_size, self.ball_size, fill=self.color)
        self.canvas.coords(self.ball, x, y, x + self.ball_size, y + self.ball_size)
        self.coords = self.canvas.coords(self.ball)

    def draw(self):
        self.__draw_first_slide()
        
    def __draw_first_slide(self):
        self.canvas.move(self.ball, 0, self.ball_move_backward)
        self.canvas.after(self.interval, self.__draw_second_slide)
        
    def __draw_second_slide(self):
        self.canvas.move(self.ball, self.ball_move_backward, 0)
        self.canvas.after(self.interval, self.__draw_third_slide)
        
    def __draw_third_slide(self):    
        self.canvas.move(self.ball, 0, self.ball_move)
        self.canvas.after(self.interval, self.__draw_fourth_slide)
        
    def __draw_fourth_slide(self):    
        self.canvas.move(self.ball, self.ball_move, 0)
        self.canvas.after(self.interval, self.__draw_first_slide)

class Player:
    def __init__(self, canvas, x, y, color):
        self.canvas = canvas
        self.x = x
        self.y = 400
        self.color = color
        self.motionX = 0
        self.motionY = 0
        self.rocket = canvas.create_polygon((10,10), (15, 0), (20, 10), (20, 30), (30, 40), (20, 40), (20, 45), (10, 45), (10, 40), (0, 40), (10, 30), fill=color)
        self.canvas.move(self.rocket, self.x, self.y)
        self.canvas.tag_bind(self.rocket, '<Right>', self.X)
        self.canvas.tag_bind(self.rocket, '<Left>', self._X)
      

    def draw(self):
        self.canvas.move(self.rocket, self.motionX, self.motionY)
        self.canvas.after(10, self.draw)

    def X(self, event):
        #self.canvas.move(self.rocket, self.x, self.y)
        self.motionX = 5
        self.motionY = 0
        self.x += self.motionX

    def Y(self, event):
        #self.canvas.move(self.rocket, self.x, self.y)
        self.motionY = 5
        self.motionX = 0
        self.y += self.motionY

    def _X(self, event):
        #self.canvas.move(self.rocket, self.x, self.y)
        self.motionX = -5
        self.motionY = 0
        self.x += self.motionX

    def _Y(self, event):
        #self.canvas.move(self.rocket, self.x, self.y)
        self.motionY = -5
        self.motionX = 0
        self.y += self.motionY

    def XY(self, event):
        self.canvas.move(self.rocket, self.x, self.y)
        self.motionY = 5
        self.motionX = 5
        self.canvas.move(self.rocket, self.motionX, self.motionY)
        self.y += self.motionY
        self.x += self.motionX

    def X_Y(self, event):
        self.canvas.move(self.rocket, self.x, self.y)
        self.motionY = -5
        self.motionX = 5
        self.canvas.move(self.rocket, self.motionX, self.motionY)
        self.y += self.motionY
        self.x += self.motionX

    def _XY(self, event):
        self.canvas.move(self.rocket, self.x, self.y)
        self.motionY = 5
        self.motionX = -5
        self.canvas.move(self.rocket, self.motionX, self.motionY)
        self.y += self.motionY
        self.x += self.motionX

    def _X_Y(self, event):
        self.canvas.move(self.rocket, self.x, self.y)
        self.motionY = -5
        self.motionX = -5
        self.canvas.move(self.rocket, self.motionX, self.motionY)
        self.y += self.motionY
        self.x += self.motionX
    def draw(self):
        self.canvas.move(self.id, self.x, self.y)
        pos = self.canvas.coords(self.id)
        if pos[0] <= 0:
            self.x = 0
    def turn_left(self, event):
        self.x = -20
    def turn_right(self, event):
        self.x = 20
   
        
x = random.randrange(0, 300)
y = random.randrange(200, 300)
ball_size = random.randrange(50, 150)
colors = ['blue', 'red', 'green', 'brown']
color = random.choice(colors) 

master = Tk()
master["bg"] = "black"
master.title("Игра")
master.resizable(0, 0)
canvas = Canvas(master, width=500, height=500, bg='black')
canvas.pack()

for i in range(random.randint(90, 120)):
    draw_star()
    
ball = Ball(canvas, color, ball_size, 1, 10)
rocket = Player(canvas, random.randint(0, 450), random.randint(0, 450), random.choice(colors))

ball.draw()
rocket.draw()
